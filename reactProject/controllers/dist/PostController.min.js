"use strict";var expressHandler=require("express-async-handler"),Post=require("../models/postModel"),postValidation=require("../utils/validation/postValidation"),uploadMedia=require("../utils/uploadMedia"),AppError=require("../utils/appError");exports.createPost=expressHandler(function(r,t,s){var n,a,o,u,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(uploadMedia(r.file.path));case 2:if(n=e.sent,a=postValidation.newPost({description:r.body.description,user:r.user.id,media:n.secure_url}),o=a.error,u=a.value,o)return e.abrupt("return",s(new AppError("please enter valid data",400)));e.next=6;break;case 6:return console.log("here"),e.next=9,regeneratorRuntime.awrap(Post.create(u));case 9:i=e.sent,console.log(i),t.status(201).json({status:"success",data:i});case 12:case"end":return e.stop()}})}),exports.getAllPosts=expressHandler(function(e,r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(Post.find());case 2:t=e.sent,r.status(200).json({status:"success",result:t.length,data:t});case 4:case"end":return e.stop()}})}),exports.getPostsByUser=expressHandler(function(r,t){var s;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(Post.find({user:r.params.id}));case 2:s=e.sent,t.status(200).json({status:"success",result:s.length,data:s});case 4:case"end":return e.stop()}})}),exports.getOnePost=expressHandler(function(r,t,s){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(Post.findById(r.params.id));case 2:if(n=e.sent){e.next=5;break}return e.abrupt("return",s(new AppError("Post Not Found",404)));case 5:t.status(200).json({status:"success",data:n});case 6:case"end":return e.stop()}})}),exports.updatePost=expressHandler(function(r,t,s){var n,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(Post.findById(r.params.id));case 2:if(n=e.sent){e.next=5;break}return e.abrupt("return",s(new AppError("Post Not Found",404)));case 5:if(r.user.id!==n.user._id.toString())return e.abrupt("return",s(new AppError("You do not have permission to perform this action. This action is only allowed for the owner of this post",403)));e.next=7;break;case 7:return e.next=9,regeneratorRuntime.awrap(uploadMedia(r.file.path));case 9:return a=e.sent,e.next=12,regeneratorRuntime.awrap(Post.findByIdAndUpdate(r.params.id,{description:r.body.description,user:r.body.user,media:a.secure_url},{new:!0,runValidators:!0}));case 12:n=e.sent,t.status(200).json({status:"success",data:n});case 14:case"end":return e.stop()}})}),exports.deletePost=expressHandler(function(r,t,s){var n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(Post.findById(r.params.id));case 2:if(n=e.sent){e.next=5;break}return e.abrupt("return",s(new AppError("Post Not Found",404)));case 5:if(r.user.id!==n.user._id.toString())return e.abrupt("return",s(new AppError("You do not have permission to perform this action. This action is only allowed for the owner of this post",403)));e.next=7;break;case 7:return e.next=9,regeneratorRuntime.awrap(Post.findByIdAndDelete(r.params.id));case 9:t.status(204).json({status:"success",data:null});case 10:case"end":return e.stop()}})});
//# sourceMappingURL=PostController.min.js.map

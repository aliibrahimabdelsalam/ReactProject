{"version":3,"sources":["uploadMedia.js"],"names":["cloudinary","require","fs","uploadMedia","mediaPath","uploader","upload","folder","overwrite","invalidate","resource_type","uploadRes","unlinkSync","module","exports"],"mappings":";;AAAA,IAAMA,UAAU,GAAGC,OAAO,CAAC,cAAD,CAA1B;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AAEA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACdA,SADc;AAAA;AAAA;AAAA;;AAAA;AAAA,0CAEQJ,UAAU,CAACK,QAAX,CAAoBC,MAApB,CAA2BF,SAA3B,EAAsC;AAC5DG,YAAAA,MAAM,EAAE,SADoD;AAE5DC,YAAAA,SAAS,EAAE,IAFiD;AAG5DC,YAAAA,UAAU,EAAE,IAHgD;AAI5DC,YAAAA,aAAa,EAAE;AAJ6C,WAAtC,CAFR;;AAAA;AAEVC,UAAAA,SAFU;;AAAA,eAQZA,SARY;AAAA;AAAA;AAAA;;AASdT,UAAAA,EAAE,CAACU,UAAH,CAAcR,SAAd;AATc,2CAUPO,SAVO;;AAAA;AAAA,2CAaX,KAbW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAgBAE,MAAM,CAACC,OAAP,GAAiBX,WAAjB","sourcesContent":["const cloudinary = require('./cloudinary');\r\nconst fs = require('fs');\r\n\r\nconst uploadMedia = async (mediaPath) => {\r\n  if (mediaPath) {\r\n    const uploadRes = await cloudinary.uploader.upload(mediaPath, {\r\n      folder: 'samples',\r\n      overwrite: true,\r\n      invalidate: true,\r\n      resource_type: 'auto',\r\n    });\r\n    if (uploadRes) {\r\n      fs.unlinkSync(mediaPath);\r\n      return uploadRes;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nmodule.exports = uploadMedia;\r\n"],"file":"uploadMedia.dev.js"}
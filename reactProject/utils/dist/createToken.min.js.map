{"version":3,"sources":["createToken.js"],"names":["jwt","require","id","sign","process","env","JWT_SECRET","signToken","expiresIn","JWT_EXPIRES_IN","token","user","_id","res","cookie","createToken","Date","now","expires","httpOnly","secure","sameSite","password","undefined","status","userStatus","json","module","exports"],"mappings":"aAAA,IAAMA,IAAMC,QAAQ,gBAAdD,UAAc,SAAAE,GAGlB,OAAOF,IAAIG,KAAK,CAAED,GAAAA,GAAME,QAAQC,IAAIC,WAAY,CAD5CC,UAASH,QAAGC,IAAZE,kBAEFC,YAAWJ,SAAAA,EAAYK,EAAAA,EAAAA,GADuB,IAAhDC,EAAAH,UAAAI,EAAAC,KAQAC,EAAIC,OAAO,MAAOJ,EAAO,CAHrBK,QAAAA,IAAWC,KACTN,KAAKO,MAAX,GAAcV,QAAUI,IAAKC,sBAA7B,GAAA,GAAA,KAGEM,UAAS,EAGTC,QAAQ,EACRC,SAAQ,OACRC,YAAU,IAIZV,EAAKW,cAAWC,EAGdC,EAAAA,OAAQC,GADkBC,KAAA,CAE1BhB,OAAAA,UAFFA,MAAAA,KAMFiB,OAAOC,QAAUb","file":"createToken.min.js","sourcesContent":["const jwt = require('jsonwebtoken');\r\n\r\nconst signToken = (id) => {\r\n  return jwt.sign({ id }, process.env.JWT_SECRET, {\r\n    expiresIn: process.env.JWT_EXPIRES_IN,\r\n  });\r\n};\r\n\r\nconst createToken = (user, userStatus, req, res) => {\r\n  const token = signToken(user._id);\r\n\r\n  res.cookie('jwt', token, {\r\n    expires: new Date(\r\n      Date.now() + process.env.JWT_COOKIE_EXPIRES_IN * 24 * 60 * 60 * 1000\r\n    ),\r\n    httpOnly: true,\r\n    secure: true || req.headers['x-forwarded-proto'] === 'https',\r\n    sameSite: 'none',\r\n    credential: true,\r\n  });\r\n\r\n  user.password = undefined;\r\n\r\n  res.status(userStatus).json({\r\n    status: 'success',\r\n    token,\r\n  });\r\n};\r\n\r\nmodule.exports = createToken;\r\n"]}
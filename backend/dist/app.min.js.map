{"version":3,"sources":["app.js"],"names":["express","require","dotenv","cookieParser","helmet","AppError","path","DB","cors","authRouter","config","json","app","enable","process","on","err","console","globalErrorHandler","log","name","message","use","limit","urlencoded","extended","env","NODE_ENV","options","postRouter","req","res","next","concat","originalUrl","morgan","listen","PORT"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,OAASD,QAAQ,UADjBD,OAAUC,QAAQ,UAGlBE,aAAeF,QAAQ,iBAFvBC,KAASD,QAAQ,QAIjBG,OAASH,QAAQ,UAEjBI,SAAWJ,QAAQ,oBAJzBC,OAAMC,OAAAA,CAAYG,KAAGL,iBAMrB,IAAMM,GAAKN,QAAQ,cALbO,mBAANP,QAAA,iCAOMQ,WAAaR,QAAQ,sBANrBG,WAASH,QAAQ,sBAEjBI,IAAQL,UACdE,IAAAA,IAAOQ,QAAOC,QAAAC,IAAdC,OAAA,eACAC,QAAQC,GAAGd,oBAAX,SAAAe,GACAC,QAAMC,IAAAA,2CAaJD,QAAQE,IAAIH,EAAII,KAAMJ,EAAIK,SAZ5BP,QAAML,KAAU,KAgBhBG,IAAIU,IAAId,QAbRI,IAAMA,QAAMZ,IAAOQ,QAOjBI,IAAAU,IAAAtB,QAAAW,KAAA,CAAAY,MAAA,UACAN,IAAAA,IAAAA,QAAYO,WAAA,CAAAC,UAAA,EAAAF,MAAA,UACZN,IAAAA,IAAAA,gBAHF,gBAAAH,QAAAY,IAAAC,WAOAf,IAAIU,IAAId,OAAR,QACAI,QAAIgB,IAAJhB,SAAAA,OAAAE,QAEAY,IAAAC,YAEAf,QAAQZ,IAAAA,SAAeuB,IAAAA,IAAK,eAAEd,YAATG,IAArBU,IAAA,gBAAAO,YAC6BJ,IAAAA,IAAAA,IAAU,SAAAK,EAAZC,EAAAC,GAAkBT,EAAK,IAAElB,SAAF,cAAA4B,OAAEH,EAAAI,YAAF,oBAAE,QAepDtB,IAAIU,IAAIJ,oBAXNN,GAAAA,QAAQuB,IAAAA,eACRlB,IAAAA,KAAA,IACDL,IAAAwB,OAAAC,KAAA,WAcCpB,QAAQE,IAAR,uBAAAc,OAAmCI","file":"app.min.js","sourcesContent":["const express = require('express');\r\nconst dotenv = require('dotenv');\r\nconst morgan = require('morgan');\r\nconst cookieParser = require('cookie-parser');\r\nconst cors = require('cors');\r\nconst helmet = require('helmet');\r\n\r\nconst AppError = require('./utils/appError');\r\ndotenv.config({ path: './config.env' });\r\nconst DB = require('./dataBase');\r\nconst globalErrorHandler = require('./middlewares/errorMiddleware');\r\nconst authRouter = require('./routes/authRoute');\r\nconst postRouter = require('./routes/postRoute');\r\n\r\nconst app = express();\r\n\r\napp.use(express.json());\r\n\r\napp.enable('trust proxy');\r\n\r\nprocess.on('uncaughtException', (err) => {\r\n  //if print variable without declare it\r\n  console.log('UNCAUGHT EXCEPTION! ðŸ’¥ Shutting down...');\r\n  console.log(err.name, err.message);\r\n  process.exit(1);\r\n});\r\n\r\napp.use(cors());\r\napp.options('*', cors());\r\n\r\n// app.use(helmet());\r\n\r\napp.use(express.json({ limit: '10kb' }));\r\napp.use(express.urlencoded({ extended: true, limit: '10kb' }));\r\napp.use(cookieParser());\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  app.use(morgan('dev'));\r\n  console.log(`mode: ${process.env.NODE_ENV}`);\r\n}\r\nconsole.log('hello');\r\napp.use('/api/v1/auth', authRouter);\r\napp.use('/api/v1/posts', postRouter);\r\n\r\napp.all('*', (req, res, next) => {\r\n  next(new AppError(`Can't find ${req.originalUrl} on this server!`, 404));\r\n});\r\n\r\napp.use(globalErrorHandler);\r\n\r\nDB(process.env.DATA_BASE_URL);\r\nconst PORT = 8000;\r\napp.listen(PORT, () => {\r\n  console.log(`App Running In Port ${PORT}`);\r\n});\r\n"]}
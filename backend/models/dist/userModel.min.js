"use strict";var mongoose=require("mongoose"),validator=require("validator"),bcrypt=require("bcryptjs"),userSchema=new mongoose.Schema({name:{type:String,required:[!0,"Please Enter Your Name"]},email:{type:String,required:[!0,"Please Enter Your Name"],validate:[validator.isEmail,"Enter A Valid Email"]},password:{type:String,validate:[validator.isStrongPassword,"Enter A Strong Password With minLength: 8,  minlowercase letter:1 ,minlowercase letter:1 min number:1, min symbol:1"]},passwordConfirm:{type:String,required:[!0,"Please confirm your password"],validate:{validator:function(e){return e===this.password},message:"Password Are not the same"}},media:{type:String}},{timestamps:!0});userSchema.pre("save",function(r){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(this.isModified("password")){e.next=2;break}return e.abrupt("return",r());case 2:return e.next=4,regeneratorRuntime.awrap(bcrypt.hash(this.password,12));case 4:this.password=e.sent,this.passwordConfirm=void 0,r();case 7:case"end":return e.stop()}},null,this)}),userSchema.methods.correctPassword=function(r,t){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(bcrypt.compare(r,t));case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}})};var User=mongoose.model("User",userSchema);module.exports=User;
//# sourceMappingURL=userModel.min.js.map
